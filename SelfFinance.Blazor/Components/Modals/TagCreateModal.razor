@using SelfFinance.Blazor.Components.Abstract
@using Microsoft.AspNetCore.Components.Forms
@using SelfFinance.Data.Models
@using SelfFinance.Domain.Dto


<ModalBase @ref="_modalBase" Title="New Tag">
    <Content>
        <EditForm class="flex-col gap-14" Model="@Tag" OnValidSubmit="_ => OnValidSubmitCallback.InvokeAsync(Tag)" autocomplete="off">
            <DataAnnotationsValidator/>

            <div class="flex-col-reverse gap-5">
                <ValidationMessage For="() => Tag!.Name"/>
                
                <InputText class="input-underlined danger-on-error" id="name" @bind-Value="Tag!.Name"/>
                
                <label class="focusable-label text-details text-danger-on-error" for="name">Name</label>
            </div>

            <div class="flex-col-reverse gap-5">
                <ValidationMessage For="() => Tag!.OperationType"/>
                
                <InputSelect class="input-underlined danger-on-error" id="type" TValue="OperationType" 
                             @bind-Value="Tag!.OperationType">
                    @foreach (var type in Enum.GetValues<OperationType>())
                    {
                        <option TValue="OperationType" Value="@type">@type</option>
                    }
                </InputSelect>
                
                <label class="focusable-label text-details text-danger-on-error" for="type">Transaction Type</label>
            </div>

            <div class="flex-row gap-10 space-between">
                <input class="rounded-btn bg-cancel item-width-2" type="reset" @onclick="CancelForm" value="Cancel"/>
                <input class="rounded-btn bg-success item-width-2" type="submit" value="Submit"/>
            </div>
        </EditForm>
    </Content>
</ModalBase>

@code {
    private ModalBase _modalBase;

    [Parameter]
    public EventCallback<OperationTagCreateDto> OnValidSubmitCallback { get; set; }
    private OperationTagCreateDto? Tag { get; set; }

    protected override void OnInitialized()
    {
        Tag = new OperationTagCreateDto();
    }

    public void Show()
    {
        _modalBase.Show();
    }

    public void Hide()
    {
        _modalBase.Hide();
    }

    private void CancelForm()
    {
        _modalBase.Hide();
        Tag = new OperationTagCreateDto();
    }
}